
CREATE DATABASE app03_carbajal_clase;

SELECT * FROM usuarios
CREATE TABLE usuarios (
    id_usuario SERIAL PRIMARY KEY,
    nombre1  VARCHAR(70)NOT NULL,
    nombre2  VARCHAR(70),
    apellido1 VARCHAR(70) NOT NULL,
    apellido2 VARCHAR(70),
    telefono BIGINT,
    dpi BIGINT,
    correo VARCHAR(100) NOT NULL UNIQUE,
    usuario_clave lVARCHAR(1056) NOT NULL,
    token lVARCHAR(1056),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    fecha_clave DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    fotografia lVARCHAR(2056),
    situacion SMALLINT  DEFAULT 1
);
-------------------------------
SELECT * FROM aplicacion
CREATE TABLE aplicacion (
    id_app SERIAL PRIMARY KEY,
    nombre_app_lg LVARCHAR(2056),
    nombre_app_md LVARCHAR(1056),
    nombre_app_ct LVARCHAR(255),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT  DEFAULT 1
);

-----------------------------------
select *from permisos
CREATE TABLE permisos (
    id_permiso SERIAL PRIMARY KEY,
    nombre_permiso VARCHAR(70) NOT NULL,
    clave_permiso VARCHAR(70),
    descripcion VARCHAR(255),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT  DEFAULT 1
);

SELECT * FROM permiso_aplicacion
CREATE TABLE permiso_aplicacion (
    id_permiso_app SERIAL PRIMARY KEY,
    id_permiso INT NOT NULL,
    id_app INT NOT NULL,
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
  
    FOREIGN KEY (id_permiso) REFERENCES permisos (id_permiso),
    FOREIGN KEY (id_app) REFERENCES aplicacion (id_app)
);

----------------------------------------------------------------------
select *from asig_permisos
DROP TABLE asig_permisos
CREATE TABLE asig_permisos (
    id_asig_permiso SERIAL PRIMARY KEY,
    id_usuario INT,
    id_permiso_app INT,
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    fecha_expiro DATETIME YEAR TO SECOND,
    usuario_asigno INT,
    motivo LVARCHAR(255),
    situacion SMALLINT  DEFAULT 1
);

ALTER TABLE asig_permisos 
    ADD CONSTRAINT FOREIGN KEY (id_usuario) 
    REFERENCES usuarios CONSTRAINT fk_permisos_usuarios;
    
ALTER TABLE asig_permisos 
    ADD CONSTRAINT FOREIGN KEY (id_permiso_app) 
    REFERENCES permiso_aplicacion CONSTRAINT fk_permisos_asig;
    
--------------------------------------------------------
SELECT * FROM historial_act
DROP TABLE historial_act
CREATE TABLE historial_act (
    id_hist_act SERIAL PRIMARY KEY,
    id_usuario INT,
    id_ruta INT,
    fecha_creacion DATETIME YEAR TO MINUTE,
    ejecucion LVARCHAR(2056),
    status SMALLINT,
    situacion SMALLINT  DEFAULT 1
);

ALTER TABLE historial_act 
    ADD CONSTRAINT FOREIGN KEY (id_usuario) 
    REFERENCES usuarios CONSTRAINT fk_historial_usuarios;
    
ALTER TABLE historial_act 
    ADD CONSTRAINT FOREIGN KEY (id_ruta) 
    REFERENCES rutas CONSTRAINT fk_historial_rutas;
---------------
CREATE TABLE rutas (
    id_ruta SERIAL PRIMARY KEY,
    id_app INT,
    descripcion LVARCHAR(2056),
    situacion SMALLINT  DEFAULT 1
);

ALTER TABLE rutas 
    ADD CONSTRAINT FOREIGN KEY (id_app) 
    REFERENCES aplicacion CONSTRAINT fk_rutas_aplicacion;
    
---------------------------------------------------------------------------------------------
---------------------------------------------------------------
-- TABLAS PARA SISTEMA DE CELULARES
---------------------------------------------------------------

-- 1. Tabla de marcas de celulares
Select *from marcas
CREATE TABLE marcas (
    id_marca SERIAL PRIMARY KEY,
    nombre_marca VARCHAR(100) NOT NULL UNIQUE,
    pais_origen VARCHAR(50),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1
);

-- 2. Tabla de clientes
Select *from clientes
CREATE TABLE clientes (
    id_cliente SERIAL PRIMARY KEY,
    nombres VARCHAR(100) NOT NULL,
    apellidos VARCHAR(100) NOT NULL,
    telefono VARCHAR(20),
    celular VARCHAR(20),
    nit VARCHAR(20),
    correo VARCHAR(100),
    direccion LVARCHAR(500),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1
);

-- 3. Tabla de celulares (inventario)
CREATE TABLE celulares (
    id_celular SERIAL PRIMARY KEY,
    id_marca INT NOT NULL,
    modelo VARCHAR(100) NOT NULL,
    precio_compra DECIMAL(10,2) NOT NULL,
    precio_venta DECIMAL(10,2) NOT NULL,
    stock_actual INT DEFAULT 0,
    stock_minimo INT DEFAULT 5,
    color VARCHAR(50),
    almacenamiento VARCHAR(20), -- 64GB, 128GB, etc.
    ram VARCHAR(20), -- 4GB, 6GB, etc.
    estado VARCHAR(20) DEFAULT 'Nuevo', -- Nuevo, Usado, Reacondicionado
    fecha_ingreso DATE,
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
    FOREIGN KEY (id_marca) REFERENCES marcas(id_marca)
);

-- 4. Tabla de empleados
CREATE TABLE empleados (
    id_empleado SERIAL PRIMARY KEY,
    id_usuario INT NOT NULL,
    codigo_empleado VARCHAR(20) UNIQUE NOT NULL,
    puesto VARCHAR(100),
    salario DECIMAL(10,2),
    fecha_ingreso DATE,
    especialidad VARCHAR(255), -- Reparaciones, Ventas, etc.
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
    FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

-- 5. Tabla de tipos de servicios
CREATE TABLE tipos_servicios (
    id_tipo_servicio SERIAL PRIMARY KEY,
    descripcion VARCHAR(255) NOT NULL,
    precio_base DECIMAL(10,2) DEFAULT 0.00,
    tiempo_estimado INT DEFAULT 0, -- en horas
    categoria VARCHAR(50), -- Pantalla, Software, Hardware, etc.
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1
);

-- 6. Tabla de reparaciones
DROP  TABLE reparaciones
CREATE TABLE reparaciones (
    id_reparacion SERIAL PRIMARY KEY,
    id_cliente INT NOT NULL,
    id_empleado_asignado INT,
    id_tipo_servicio INT,
    id_celular INT,
    imei VARCHAR(20),
    motivo LVARCHAR(1000) NOT NULL,
    diagnostico LVARCHAR(1000),
    solucion LVARCHAR(1000),
    fecha_ingreso DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    fecha_asignacion DATETIME YEAR TO SECOND,
    fecha_inicio_trabajo DATETIME YEAR TO SECOND,
    fecha_terminado DATETIME YEAR TO SECOND,
    fecha_entrega DATETIME YEAR TO SECOND,
    costo_servicio DECIMAL(10,2) DEFAULT 0.00,
    costo_repuestos DECIMAL(10,2) DEFAULT 0.00,
    total_cobrado DECIMAL(10,2) DEFAULT 0.00,
    estado VARCHAR(20) DEFAULT 'Ingresado', -- Ingresado, Asignado, En_Proceso, Terminado, Entregado, Cancelado
    prioridad VARCHAR(10) DEFAULT 'Normal', -- Alta, Normal, Baja
    observaciones LVARCHAR(1000),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
    FOREIGN KEY (id_cliente) REFERENCES clientes(id_cliente),
    FOREIGN KEY (id_empleado_asignado) REFERENCES empleados(id_empleado),
    FOREIGN KEY (id_tipo_servicio) REFERENCES tipos_servicios(id_tipo_servicio),
    FOREIGN KEY (id_celular) REFERENCES celulares(id_celular)
);

-- 7. Tabla de ventas
CREATE TABLE ventas (
    id_venta SERIAL PRIMARY KEY,
    id_empleado_vendedor INT NOT NULL,
    id_cliente INT NOT NULL,
    numero_factura VARCHAR(50) UNIQUE,
    fecha_venta DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    tipo_venta CHAR(1) NOT NULL, -- C=Celular, R=Reparación, M=Mixta
    subtotal DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    descuento DECIMAL(10,2) DEFAULT 0.00,
    impuestos DECIMAL(10,2) DEFAULT 0.00,
    total DECIMAL(10,2) NOT NULL,
    metodo_pago VARCHAR(20) DEFAULT 'Efectivo', -- Efectivo, Tarjeta, Transferencia
    estado_pago VARCHAR(20) DEFAULT 'Pagado', -- Pagado, Pendiente, Parcial
    observaciones LVARCHAR(500),
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
    FOREIGN KEY (id_empleado_vendedor) REFERENCES empleados(id_empleado),
    FOREIGN KEY (id_cliente) REFERENCES clientes(id_cliente)
);

-- 8. Tabla de detalle de ventas
CREATE TABLE detalle_ventas (
    id_detalle SERIAL PRIMARY KEY,
    id_venta INT NOT NULL,
    id_celular INT,
    id_reparacion INT,
    descripcion VARCHAR(255) NOT NULL,
    cantidad INT DEFAULT 1,
    precio_unitario DECIMAL(10,2) NOT NULL,
    descuento_item DECIMAL(10,2) DEFAULT 0.00,
    subtotal_item DECIMAL(10,2) NOT NULL,
    fecha_creacion DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
    FOREIGN KEY (id_venta) REFERENCES ventas(id_venta),
    FOREIGN KEY (id_celular) REFERENCES celulares(id_celular),
    FOREIGN KEY (id_reparacion) REFERENCES reparaciones(id_reparacion)
);

-- 9. Tabla de movimientos de inventario
CREATE TABLE movimientos_inventario (
    id_movimiento SERIAL PRIMARY KEY,
    id_celular INT NOT NULL,
    id_empleado INT NOT NULL,
    tipo_movimiento VARCHAR(20) NOT NULL, -- Entrada, Salida, Ajuste, Venta
    cantidad INT NOT NULL,
    stock_anterior INT NOT NULL,
    stock_nuevo INT NOT NULL,
    motivo LVARCHAR(500),
    referencia VARCHAR(100), -- Número de venta, compra, etc.
    fecha_movimiento DATETIME YEAR TO SECOND DEFAULT CURRENT YEAR TO SECOND,
    situacion SMALLINT DEFAULT 1,
    FOREIGN KEY (id_celular) REFERENCES celulares(id_celular),
    FOREIGN KEY (id_empleado) REFERENCES empleados(id_empleado)
);
